

** 6. Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct 
for the fiscal year 2021 and in theIndian market. The final output contains these fields, customer_code, customer, 
average_discount_percentage

SELECT 
fd.customer_code,
dc.customer,
ROUND(AVG(fd.pre_invoice_discount_pct),4) AS average_discount_percentage
FROM fact_pre_invoice_deductions fd
JOIN dim_customer dc ON fd.customer_code = dc.customer_code
WHERE fd.fiscal_year = 2021 AND dc.market = 'India'
GROUP BY fd.customer_code, dc.customer
ORDER BY average_discount_percentage DESC
LIMIT 5;


** 7. Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month. 
This analysis helps to get an idea oflow and high-performing months and take strategic decisions. 
The final report contains these columns: Month,, Year, Gross sales Amount

SELECT 
MONTHNAME(fs.date) AS Month,
YEAR(fs.date) AS Year,
ROUND(SUM(fg.gross_price * fs.sold_quantity), 2) AS Gross_Sales_Amount
FROM fact_sales_monthly fs
JOIN dim_customer dc ON fs.customer_code = dc.customer_code
JOIN fact_gross_price fg ON fs.product_code = fg.product_code
WHERE
    dc.customer = 'Atliq Exclusive'
GROUP BY MONTHNAME(fs.date) , YEAR(fs.date)
ORDER BY Year;


** 8. In which quarter of 2020, got the maximum total_sold_quantity? 
The final output contains these fields sorted by the total_sold_quantity and Quarter

SELECT 
CASE
	WHEN MONTH(date) IN (9, 10, 11) THEN 'Q1'
	WHEN MONTH(date) IN (12, 1, 2) THEN 'Q2'
	WHEN MONTH(date) IN (3, 4, 5) THEN 'Q3'
	ELSE 'Q4'
END AS Quarter,
SUM(sold_quantity) AS Total_sold_quantity
FROM fact_sales_monthly
WHERE fiscal_year = 2020
GROUP BY Quarter
ORDER BY Total_sold_quantity DESC;


** 9. Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? 
The final output contains these fields, channel, gross_sales_mln, percentage

WITH total_sales_cte AS (
SELECT  
dc.Channel,
ROUND(SUM(sold_quantity * gross_price) / 1000000,2) as gross_sales_mln
FROM fact_sales_monthly fs
JOIN fact_gross_price fg ON fs.product_code = fg.product_code
JOIN dim_customer dc ON fs.customer_code = dc.customer_code
WHERE fs.fiscal_year = 2021
GROUP BY dc.channel
ORDER BY gross_sales_mln DESC
)
SELECT
channel,
gross_sales_mln,
ROUND(gross_sales_mln * 100 / (SELECT SUM(gross_sales_mln) FROM total_sales_cte) ,2) AS percentage
FROM total_sales_cte;



** 10. Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? 
The final output contains these fields, division, product_code, product, total_sold_quantity, rank_order

With Ranked_products AS (
SELECT
dp.division,
dp.product_code,
dp.product,
sum(fs.sold_quantity) AS Total_sold_quantity,
RANK() OVER (PARTITION BY dp.division ORDER BY sum(fs.sold_quantity) DESC) AS rank_order
FROM fact_sales_monthly fs
JOIN dim_product dp ON fs.product_code = dp.product_code
WHERE fs.fiscal_year = 2021
GROUP BY dp.division, dp.product_code, dp.product
)
SELECT
division,
product_code,
product,
Total_sold_quantity,
rank_order
FROM Ranked_products
WHERE rank_order <= 3 ;





